- name: "Create operator ethereum account with geth"
  hosts: "{{ play_hosts }}"
  remote_user: "{{ default_user }}"
  gather_facts: yes
  tasks:

    - name: "remove existing eth wallet data"
      become: yes
      file:
        path: "{{ geth_dir }}"
        state: absent
      when: wipe_eth_wallet is not undefined and wipe_eth_wallet

    - name: "create geth keystore directory"
      become: yes
      file:
        path: "{{ geth_dir }}keystore"
        state: directory
        mode: '0755'

    - name: "Recursively change ownership of geth directory"
      become: yes
      file:
        path: "{{ geth_dir }}"
        state: directory
        recurse: yes
        owner: "{{ node_user }}"

    - name: "copy local geth account"
      become: yes
      copy:
        src: "{{ OPERATOR_KEYSTORE_PATH }}"
        dest: "{{ geth_dir }}keystore"
        owner: remote_user
      when: OPERATOR_KEYSTORE_PATH is not undefined

    - name: "check for existing account"
      become: yes
      stat:
        path: "{{ geth_dir }}account.txt"
      register: account_file

    - name: "echo account_file_exists"
      debug:
        verbosity: 0
        var: account_file.stat.exists

    - name: "get account address from file"
      become: yes
      command: 'cat {{ geth_dir }}account.txt'
      register: remotely_created_account
      when: account_file.stat.exists and OPERATOR_ADDRESS is undefined

    - name: "create password file"
      become: yes
      copy:
        content: "{{runtime_envvars['OPERATOR_ETHEREUM_PASSWORD']}}"
        dest: "/home/{{ node_user }}/geth/password.txt"
        owner: "{{ node_user }}"
      when: OPERATOR_KEYSTORE_PATH is undefined and not account_file.stat.exists

    - name: "echo geth datadir"
      debug:
        verbosity: 0
        msg: "{{ geth_dir }}"

    - name: "create new account and capture the address"
      become: yes
      shell:
        cmd: 'docker run -v /home/{{ node_user }}/geth:/root ethereum/client-go:latest account new --password /root/password.txt --datadir {{geth_container_geth_datadir}} | grep "Public address of the key:" | cut -d":" -f2- | xargs'
      register: new_geth_account_checksum
      when: not account_file.stat.exists

    - name: "ensure password file is deleted"
      become: yes
      when: new_geth_account_checksum is not undefined
      file:
        path: "/home/{{ node_user }}/geth/password.txt"
        state: absent

    - name: "write new address to file for later use"
      become: yes
      when: not account_file.stat.exists and new_geth_account_checksum is not undefined
      copy:
        content: "{{new_geth_account_checksum.stdout}}"
        dest: "{{ geth_dir }}account.txt"

    - name: "write declared operator address to file if it exists"
      become: yes
      when: OPERATOR_ADDRESS is not undefined
      copy:
        content: "{{OPERATOR_ADDRESS}}"
        dest: "{{ geth_dir }}account.txt"

    - name: "get account address from file"
      become: yes
      command: 'cat {{ geth_dir }}account.txt'
      register: active_account

    - name: store operator address
      set_fact:
        operator_address: "{{active_account.stdout}}"

    - name: "echo operator_address"
      debug:
          verbosity: 0
          msg: "{{ inventory_hostname }}:{{ operator_address }}"

    - name: find keystore files
      find:
        paths: "{{geth_dir}}keystore"
      register: keystore_files

    - name: "Recursively change ownership of geth directory"
      become: yes
      file:
        path: "{{ geth_dir }}"
        state: directory
        recurse: yes
        owner: "{{ node_user }}"

    - name: "Backup operator ethereum keys locally to: {{deployer_config_path}}/remote_operator_backups/"
      become: yes
      become_user: "{{ node_user }}"
      fetch:
        src: "{{item.path}}"
        dest: "{{deployer_config_path}}/remote_operator_backups/"
      with_items: "{{keystore_files.files}}"
